---
# tasks file for awx-rpm
- name: Install SELinux python library
  ansible.builtin.dnf:
    name: python3-policycoreutils
    state: installed
  become: true
  when: ansible_facts.selinux.status == 'enabled'

- name: Enable
  ansible.builtin.dnf:
    name: '@postgresql:15'
    state: present
  when: awx_use_postgresql15

- name: Put SELinux in permissive mode, TOOD, Re-enable
  ansible.posix.selinux:
    policy: targeted
    state: permissive
  become: true
  when: ansible_facts.selinux.status == 'enabled'

- name: Allow NGINX to listen on tcp port 8043
  community.general.seport:
    ports: 8043
    proto: tcp
    setype: http_port_t
    state: present
  become: true 
  when: ansible_facts.selinux.status == 'enabled'

- name: Allow NGINX to listen on tcp port 8013
  community.general.seport:
    ports: 8013
    proto: tcp
    setype: http_port_t
    state: present
  become: true
  when: ansible_facts.selinux.status == 'enabled'

- name: Set httpd_can_network_connect flag on and keep it persistent across reboots
  ansible.posix.seboolean:
    name: httpd_can_network_connect
    state: true
    persistent: true
  become: true
  when: ansible_facts.selinux.status == 'enabled'

- name: Populate service facts
  ansible.builtin.service_facts:

- name: Disable Firewalld, TODO, Re-enable
  ansible.builtin.service:
    name: firewalld
    state: stopped
    enabled: false
  when: '"firewalld" in ansible_facts.services'

- name: Set nis_enabled flag on and keep it persistent across reboots
  ansible.posix.seboolean:
    name: nis_enabled
    state: true
    persistent: true
  become: true
  when: ansible_facts.selinux.status == 'enabled'

- name: Add the AWX-RPM repository
  ansible.builtin.yum_repository:
    name: awx-rpm-{{ awx_rpm_version }}
    description: awx-rpm repository
    baseurl: https://rpm.awx.wiki/AWX-RPM/{{ awx_rpm_version }}/
    gpgcheck: true
    gpgkey: https://rpm.awx.wiki/AWX-RPM/RPM-GPG-KEY-awx-rpm
  become: true

- name: Enable the PYPI RPM repo
  community.general.copr:
    host: copr.fedorainfracloud.org
    state: enabled
    name: '@copr/PyPI'
    chroot: epel-9-x86_64
  become: true

- name: Enable EPEL
  ansible.builtin.dnf:
    name: 'https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm'
    state: present
    disable_gpg_check: true
  become: true

- name: Enable a RHSM repository
  community.general.rhsm_repository:
    name: codeready-builder-for-rhel-9-x86_64-rpms
  become: true
  when: ansible_facts['distribution'] == 'RedHat' 

- name: Enable a CRB repository
  ansible.builtin.command: /usr/bin/crb enable
  when: ansible_distribution == 'AlmaLinux' or ansible_distribution == 'Rocky'
  register: cbr
  changed_when: cbr.rc == 0

- name: Install AWX-RPM
  ansible.builtin.dnf:
    name: awx-rpm
    state: latest
  become: true

- block:
  - name: Install PostgreSQL
    ansible.builtin.dnf:
      name: postgresql-server
      state: present
    become: true

  - name: Initialize Postgres Database
    ansible.builtin.shell: /usr/bin/postgresql-setup --initdb
    become: true
    ignore_errors: true

  - name: Install postgres configuration
    ansible.builtin.copy:
      src: files/pg_hba.conf
      dest: /var/lib/pgsql/data/pg_hba.conf
      mode: '0644'
    become: true


  - name: Start and enable PostgreSQL
    ansible.builtin.service:
      name: postgresql
      state: started
      enabled: true
    become: true


  - name: Create User and database for AWX-RPM
    ansible.builtin.shell: "{{ item }}"
    with_items:
      - createuser -S awx
      - createdb -O awx awx
      - psql -c "ALTER USER awx WITH PASSWORD '{{ awx_rpm_dbpass }}'";
    become: true
    become_user: postgres
    ignore_errors: true

  when: not awx_rpm_external_db|bool

- name: Install AWX-RPM Settings
  ansible.builtin.template:
    src: templates/settings.py.tpl
    dest: /etc/tower/settings.py
    mode: '0640'
    owner: awx
    group: awx
  become: true

- name: Initialize data in the AWX Database
  ansible.builtin.shell: awx-manage migrate
  become: true
  become_user: awx
  run_once: true

- name: Fix Podman mapping (1/3)
  ansible.builtin.copy:
    dest: /etc/subuid
    content: |
      ansible:100000:65536
      awx:165536:65536
  become: true

- name: Fix Podman mapping (2/3)
  ansible.builtin.copy:
    dest: /etc/subgid
    content: |
      ansible:100000:65536
      awx:165536:65536
  become: true

- name: Fix Podman mapping (3/3)
  ansible.builtin.shell: podman system migrate
  become: true
  become_user: awx

- name: Enable lingering for awx
  ansible.builtin.shell: loginctl enable-linger awx
  become: true

- name: Initial AWX-RPM Configuration
  ansible.builtin.shell: "{{ item }}"
  with_items:
    - awx-manage createsuperuser --noinput --username={{ awx_rpm_user }} --email={{ awx_rpm_email }}
    - awx-manage update_password --username=admin --password={{ awx_rpm_password }}
    - awx-manage register_queue --queuename=controlplane --instance_percent=100
    - awx-manage register_queue --queuename=default --instance_percent=100
  become: true
  become_user: awx
  ignore_errors: true
  run_once: true

- name: Initial AWX-RPM Configuration
  ansible.builtin.shell: "{{ item }}"
  with_items:
    - awx-manage register_default_execution_environments
    - awx-manage provision_instance --hostname=$(hostname)
    - awx-manage register_queue --queuename=tower --hostnames=$(hostname)
  become: true
  become_user: awx
  ignore_errors: true

- name: Configure Redis Socket
  ansible.builtin.blockinfile:
    path: /etc/redis/redis.conf
    block: |
      unixsocket /var/run/redis/redis.sock
      unixsocketperm 770
  become: true

- name: Start and enable services
  ansible.builtin.service:
    name: "{{ item }}"
    state: restarted
    enabled: true
  with_items:
    - redis.service
    - nginx.service
    - awx.target
    - awx-daphne.service
    - awx-receiver.service
    - awx-receptor.service
    - awx-web.service
    - awx-dispatcher.service
    - awx-receptor-hop.service
    - awx-receptor-worker.service
    - awx-wsrelay.service
    - awx-ws-heartbeat.service
  become: true
