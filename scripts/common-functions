#!/bin/bash

SCRIPTS_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
BASEPATH_DIR=$(echo $SCRIPTS_DIR | rev | cut -f2- -d/ | rev)

mkdir -p $BASEPATH_DIR/versions/awx-rpm

RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

get_version () {

	cd $BASEPATH_DIR/versions/
	git rev-parse --abbrev-ref HEAD

}

get_python () {

	if [ -f $BASEPATH_DIR/versions/PYTHON ]; then
		cat $BASEPATH_DIR/versions/PYTHON
	else
		echo 3
	fi	

}

get_packagename () {

	PYTHONVERSION=$(get_python)
	echo $(echo $1 | sed -e 's/\([^.]*\)-.*/\1/' | sed "s/python$PYTHONVERSION-//g")

}


build_rpm () {
	VERSION=$(get_version)

	mkdir -p $BASEPATH_DIR/versions/logs/
	
	echo "Building Package $1, saving output to $BASEPATH_DIR/versions/logs/$1.log"
	# Legacy repo for AWX-RPM < 24.1.0: --addrepo=https://download.copr.fedorainfracloud.org/results/@copr/PyPI/epel-9-x86_64
	unbuffer mock -r epel-9-x86_64 --enable-network --addrepo $BASEPATH_DIR/rpmbuilds/$VERSION/RPMS/ --resultdir $BASEPATH_DIR/rpmbuilds/$VERSION/RPMS-TMP/ --no-clean $BASEPATH_DIR/rpmbuilds/$VERSION/SRPMS/$1 --rpmbuild-opts="--nocheck" --no-cleanup-after | tee $BASEPATH_DIR/versions/logs/$1.log > $BASEPATH_DIR/versions/logs/currentbuild.log
	if ls $BASEPATH_DIR/rpmbuilds/$VERSION/RPMS-TMP/*.rpm 1> /dev/null 2>&1; then
		echo -e "${GREEN}Build succeeded.${NC}"
		rm -f $BASEPATH_DIR/rpmbuilds/$VERSION/RPMS-TMP/*.src.rpm
		cp $BASEPATH_DIR/rpmbuilds/$VERSION/RPMS-TMP/*.rpm $BASEPATH_DIR/rpmbuilds/$VERSION/RPMS/
		NEWPACKAGES=$((NEWPACKAGES+1))
		BUILDSTATUS=1
	else
		echo -e "${RED}Build failed, check logs to correct.${NC}"
		BUILDSTATUS=0
	fi

	createrepo_c $BASEPATH_DIR/rpmbuilds/$VERSION/RPMS/ >> $BASEPATH_DIR/versions/logs/$1.log 2>&1
	rm -f $BASEPATH_DIR/rpmbuilds/$VERSION/RPMS-TMP/* >> $BASEPATH_DIR/versions/logs/$1.log 2>&1
	$BASEPATH_DIR/scripts/changeversion save $BUILDSTATUS $1 
}
