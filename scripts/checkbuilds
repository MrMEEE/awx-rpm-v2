#!/bin/bash

source $(dirname "$0")/common-functions

PYTHONBUILD=$(get_python)
VERSION=$(get_version)

if [ ! -d "$BASEPATH_DIR/versions/deps" ]; then
        echo "SPECs for version $VERSION not generated"
        exit 1
fi

FORMAT=$2

cd "$BASEPATH_DIR/rpmbuilds/$VERSION/RPMS/"

RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

BUILT=0
MISSING=0

BUILDSTATUS=$3
PACKAGENAME=$4
TIME=`date`

if [[ "$FORMAT" == "md" ]]; then
	echo "## Latest build"
	echo "The lastest package built was $PACKAGENAME"
	echo
	echo "The build completed at $TIME"
	echo

	if [[ "$BUILDSTATUS" == 1 ]]; then
		echo "The build was successful."
	else
		echo "The build was unsuccessful."
	fi

	echo
	echo "[Build Log](logs/$PACKAGENAME.log)"

	echo "## Package build status for version: $VERSION"
	echo "Package | Source RPM | Status | Log"
	echo ":--- | :--- | :--- | :---"

else
	echo "Package build status for version: $VERSION"
fi

for i in `ls $BASEPATH_DIR/rpmbuilds/$VERSION/SRPMS/`;do 
	PACKAGE=$(echo $i |sed 's/.src.rpm//g' |sed "s/python/python$PYTHONBUILD/g" | sed "s/python$(echo $PYTHONBUILD)3/python$PYTHONBUILD/g")
	PACKAGEPRESENT=$(ls $BASEPATH_DIR/rpmbuilds/$VERSION/RPMS/$PACKAGE* 2> /dev/null)
	PYTHONPACKAGE=$(echo $PACKAGE | sed "s/python$PYTHONBUILD/python$PYTHONBUILD-python/g")
	PYTHONPACKAGEPRESENT=$(ls $BASEPATH_DIR/rpmbuilds/$VERSION/RPMS/$PYTHONPACKAGE* 2> /dev/null)
	PYTHON3PACKAGE=$(echo $PACKAGE | sed "s/python$PYTHONBUILD/python$PYTHONBUILD-python3/g")
        PYTHON3PACKAGEPRESENT=$(ls $BASEPATH_DIR/rpmbuilds/$VERSION/RPMS/$PYTHON3PACKAGE* 2> /dev/null)
	ALTPACKAGE=$(echo $PACKAGE | sed "s/python$PYTHONBUILD/python/g")
	ALTPACKAGEPRESENT=$(ls $BASEPATH_DIR/rpmbuilds/$VERSION/RPMS/$ALTPACKAGE* 2> /dev/null)
	GITPYTHON=$(echo $PACKAGE | sed "s/gitpython$(echo $PYTHONBUILD)/gitpython/g")
	GITPYTHONPACKAGEPRESENT=$(ls $BASEPATH_DIR/rpmbuilds/$VERSION/RPMS/$GITPYTHON* 2> /dev/null)
        if [[ "$PACKAGEPRESENT" != "" ]] || [[ "$PYTHONPACKAGEPRESENT" != "" ]] || [[ "$PYTHON3PACKAGEPRESENT" != "" ]] || [[ "$ALTPACKAGEPRESENT" != "" ]] || [[ "$GITPYTHONPACKAGEPRESENT" != "" ]]; then
		BUILT=$((BUILT+1)) 
		if [[ "$1" == "all" ]]; then
			if [[ "$FORMAT" == "md" ]]; then
				if [ -f $BASEPATH_DIR/versions/logs/$i.log ]; then
					echo "$PACKAGE | $i | Built | [Log](logs/$i.log)"
				else
					echo "$PACKAGE | $i | Built |"
				fi
			else 
				echo -e "$PACKAGE - $i - ${GREEN}Built${NC}"
			fi
		fi 
	else  
		if [[ "$FORMAT" == "md" ]]; then
			if [ -f $BASEPATH_DIR/versions/logs/$i.log ]; then
				echo "$PACKAGE | $i | **Missing** | [Log](logs/$i.log)"
			else
				echo "$PACKAGE | $i | **Missing** |"
			fi
		else
			echo -e "$PACKAGE - $i - ${RED}Missing${NC}"
		fi
		MISSING=$((MISSING+1))
	fi 
done

TOTAL=$(($MISSING+$BUILT))

echo
echo "$TOTAL total packages, $BUILT packages built successfully, $MISSING packages left to fix"

