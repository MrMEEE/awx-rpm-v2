#!/bin/bash

if [[ "$1" != "force" ]]; then
        NEWVERSION=$2
        FROMVERSION=$1
else
	NEWVERSION=$3
	FROMVERSION=$2
fi

cd /opt/awx-rpm-v2/versions/

if [ -z "$FROMVERSION" ]; then
	echo "Existing version not defined"
	echo "Select from:"
	echo
	cd /opt/awx-rpm-v2/versions/
        git branch -rv |cut -f2- -d\/
        exit 1
fi

if [[ `git branch -rv |cut -f2- -d\/ |grep $FROMVERSION | wc -l` -gt 0 ]]; then
        git checkout $FROMVERSION
else
        echo "Source version $FROMVERSION doesn't exists"
        exit 1
fi

if [ -z "$NEWVERSION" ]; then
        echo "Please provide New AWX version"
        echo "Select from"
	echo
        cd /opt/awx-rpm-v2/awx/
        git ls-remote --tags origin | cut -f3- -d\/ |grep -v "{}" |sort -Vr
	#git branch -rv |cut -f2- -d\/
        exit 1
fi

if [[ "`cd /opt/awx-rpm-v2/awx/ && git ls-remote --tags origin | cut -f3- -d\/ |grep -v "{}" | grep -x $NEWVERSION |wc -l`" != "1" ]]; then
	echo "Version: $NEWVERSION doesn't exist"
	exit 1
fi

rm -rf /opt/awx-rpm-v2/migration
mkdir -p /opt/awx-rpm-v2/migration/{source,orig,conf,patch,awx-rpm}
cp -ar /opt/awx-rpm-v2/versions/deps/extra-sources /opt/awx-rpm-v2/migration
mkdir -p /opt/awx-rpm-v2/rpmbuilds/$NEWVERSION/SOURCES/
cp /opt/awx-rpm-v2/versions/deps/extra-sources/* /opt/awx-rpm-v2/rpmbuilds/$NEWVERSION/SOURCES/
if [ -d /opt/awx-rpm-v2/versions/awx-rpm ]; then
	for i in `ls /opt/awx-rpm-v2/versions/awx-rpm/*-$FROMVERSION | xargs -n 1 basename`;do
		FILENAME=$(echo $i | sed "s/-$FROMVERSION/-$NEWVERSION/g")
		cp /opt/awx-rpm-v2/versions/awx-rpm/$i /opt/awx-rpm-v2/migration/awx-rpm/$FILENAME
	done
fi

cp -a /opt/awx-rpm-v2/versions/deps/*.spec /opt/awx-rpm-v2/migration/source/
rm -f /opt/awx-rpm-v2/migration/source/awx*
for i in `ls /opt/awx-rpm-v2/migration/source/`;do
	if [ -f /opt/awx-rpm-v2/versions/deps/original/$i ];then
		cp /opt/awx-rpm-v2/versions/deps/original/$i /opt/awx-rpm-v2/migration/orig/
	else
		cp /opt/awx-rpm-v2/migration/source/$i /opt/awx-rpm-v2/migration/orig/
	fi
done
cp -a /opt/awx-rpm-v2/versions/deps/*.conf /opt/awx-rpm-v2/migration/conf/

cd /opt/awx-rpm-v2/migration/

for i in `ls /opt/awx-rpm-v2/migration/source/`;do

	NAME=$(echo $i |cut -f1 -d.)
	diff --ignore-all-space -uNr orig/$i source/$i > /opt/awx-rpm-v2/migration/patch/$NAME.patch

done

find /opt/awx-rpm-v2/migration/patch/ -type f -empty -delete

cp /opt/awx-rpm-v2/versions/deps/{extra-deps.txt,remove-deps.txt,rhel-deps.txt} /opt/awx-rpm-v2/migration/

cd /opt/awx-rpm-v2/versions/

git switch --orphan $NEWVERSION

touch /opt/awx-rpm-v2/versions/VERSION-$NEWVERSION

git add /opt/awx-rpm-v2/versions/VERSION-$NEWVERSION

git commit -qam "Created Version $NEWVERSION"

git push -u origin $NEWVERSION

/opt/awx-rpm-v2/new-scripts/changeversion $NEWVERSION

/opt/awx-rpm-v2/new-scripts/pypi2spec
for i in `cat /opt/awx-rpm-v2/migration/extra-deps.txt`; do

	PACKAGENAME=$(echo $i | cut -f1 -d=)
	VERSION=$(echo $i | cut -f3 -d=)
	
	echo "Adding package $PACKAGENAME $VERSION"
	if [[ "$PACKAGENAME" == "$VERSION" ]];then
		/opt/awx-rpm-v2/new-scripts/addpackage $PACKAGENAME
	else
		/opt/awx-rpm-v2/new-scripts/addpackage $PACKAGENAME $VERSION
	fi

done
cp /opt/awx-rpm-v2/migration/remove-deps.txt /opt/awx-rpm-v2/versions/deps/remove-deps.txt
cp /opt/awx-rpm-v2/migration/rhel-deps.txt /opt/awx-rpm-v2/versions/deps/rhel-deps.txt
cp -ar /opt/awx-rpm-v2/migration/extra-sources /opt/awx-rpm-v2/versions/deps/
mkdir -p /opt/awx-rpm-v2/versions/awx-rpm
cp /opt/awx-rpm-v2/migration/awx-rpm/* /opt/awx-rpm-v2/versions/awx-rpm/

for i in `cat /opt/awx-rpm-v2/migration/remove-deps.txt /opt/awx-rpm-v2/migration/rhel-deps.txt`; do
	PACKAGENAME=$(echo $i | sed "s/python//g" | sed "s/python3//g")
	echo "Removing package $PACKAGENAME"
	rm -f /opt/awx-rpm-v2/versions/deps/*$PACKAGENAME.spec
	rm -f /opt/awx-rpm-v2/versions/deps/*$PACKAGENAME.conf
	rm -f /opt/awx-rpm-v2/versions/deps/original/*$PACKAGENAME.spec
        rm -f /opt/awx-rpm-v2/versions/deps/original/*$PACKAGENAME.conf
done

cd /opt/awx-rpm-v2/versions/
git add /opt/awx-rpm-v2/versions/*
git commit -qam "Imported from version $FROMVERSION to version $NEWVERSION"
git push

/opt/awx-rpm-v2/new-scripts/getsources

echo "Applying patches from version: $FROMVERSION"

/opt/awx-rpm-v2/new-scripts/applypatches

