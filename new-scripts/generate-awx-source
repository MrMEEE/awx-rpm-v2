#!/bin/bash

source $(dirname "$0")/common-functions

VERSION=$(get_version)

echo "Generating source and build for AWX-RPM version: $VERSION"

cd /opt/awx-rpm-v2/

cp /opt/awx-rpm-v2/versions/awx-rpm/*$VERSION* /opt/awx-rpm-v2/rpmbuilds/$VERSION/SOURCES/

if [[ "$1" != "nosource" ]]; then
	tar zcf /opt/awx-rpm-v2/rpmbuilds/$VERSION/SOURCES/awx-$VERSION.tar.gz awx/
fi

cd /opt/awx-rpm-v2/rpmbuilds/$VERSION/RPMS/

for i in `ls python* |grep -v debuginfo |grep -v debugsource | grep -v poetry`; do

        PACKAGENAME=$(echo $i | rev | cut -f3- -d- | rev | cut -f1- -d-)
        PACKAGEVERSION=$(echo $i | rev | cut -f2 -d- | rev)
        DEPS=$DEPS$(echo "Requires: $PACKAGENAME = $PACKAGEVERSION\r")
        BUILDDEPS=$BUILDDEPS$(echo "BuildRequires: $PACKAGENAME = $PACKAGEVERSION\r")

done

BUILDVERSION=$(cat /opt/awx-rpm-v2/versions/deps/awx-rpm.spec |grep Release: | awk '{ print $2}' | cut -f1 -d%)

if [[ "$BUILDVERSION" == "" ]];then
	NEWBUILDVERSION=1
else
	let "NEWBUILDVERSION=BUILDVERSION+1"
fi

cp /opt/awx-rpm-v2/templates/awx-rpm-temp.spec /opt/awx-rpm-v2/versions/deps/awx-rpm.spec

sed -i "s/Release:.*$/Release: $NEWBUILDVERSION%{dist}/g" /opt/awx-rpm-v2/versions/deps/awx-rpm.spec

sed -i "s|¤BUILDREQUIRES¤|$BUILDDEPS|g" /opt/awx-rpm-v2/versions/deps/awx-rpm.spec
sed -i "s|¤REQUIRES¤|$DEPS|g" /opt/awx-rpm-v2/versions/deps/awx-rpm.spec
sed -i "s|¤VERSION¤|$VERSION|g" /opt/awx-rpm-v2/versions/deps/awx-rpm.spec
sed -i "s|\r|\n|g" /opt/awx-rpm-v2/versions/deps/awx-rpm.spec

rpmbuild -bs --define "_topdir /opt/awx-rpm-v2/rpmbuilds/$VERSION/" /opt/awx-rpm-v2/versions/deps/awx-rpm.spec
